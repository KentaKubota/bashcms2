#!/bin/bash -eux
#x:実行コマンドを画面に出力 e:エラーがあったら停止 u:未定義の変数があったら止まる
#一番上のコマンドの上にコメントを置かないこと rmしたときにルートが削除されてしまう

#confファイルにかいた変数を読み込む
source "$(dirname $0)/bin/conf"

#[ ]:テストコード $USER = rootの時0,それ以外は1を返す
# $USERは現在のユーザを管理している環境変数
# sudoで以外でこのプログラムを実行するとエラー ※sudoで実行すると$USERはrootになる
[ "$USER" = "root" ] # USER MUST BE ROOT


### CREATE DIRECTORIES ###
mkdir -p "$logdir" "$datadir"  "$datadir/counters"
chown www-data:www-data "$logdir" "$datadir" "$datadir/counters"


### INSTALL THIS SYSTEM ###
#bin以下を/var/www/bashcms2にコピーする rsyncはディレクトリ間を同期する
#--delete:動機元にないファイルが同期先にない場合は削除する
rsync -av --delete "$(dirname $0)/bin/" "$appdir/"
#所有者をwww-dataへ
chown www-data:www-data "$appdir" -R


### RENAME FETCH CGI ###
cd "$appdir"
#$rndには32文字の英数字が入る
rnd=$(cat /dev/urandom | tr -cd 0-9a-zA-Z | head -c 32)
[ -e "/home/k/rnd" ] && rnd=$(cat /home/k/rnd ) #REMOVE ON RELEASE!!!

mv "fetch" "fetch_$rnd.cgi"

### PULL ARTICLE REPO ###
#$contentsdir=/var/www/bashcms2_contentsにもし記事リポジトリがすでにあれば、一旦削除する
#${contentsdir:?}でこの変数が空だとエラーが発生する
rm -rf "${contentsdir:?}"

#$wwwdir=/var/www
cd "$wwwdir"

git clone "https://github.com/$contents_owner/$contents"

#記事リポジトリにあるファイルすべての所有者とグループをwww-dataへ
#www-dataはApacheを動かしているユーザ /etc/apache2/envvarsで定義されている
chown www-data:www-data "$contentsdir" -R

echo  "call fetch_$rnd.cgi from GitHub"
